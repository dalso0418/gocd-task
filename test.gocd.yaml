# 파이프라인 포맷 버전을 지정합니다. (v10은 최신 안정 버전입니다)
format_version: 10

# 파이프라인 그룹들을 정의합니다.
pipelines:
  # 'test-pipeline' 이라는 이름의 파이프라인을 정의합니다.
  test-pipeline2:
    # 이 파이프라인은 'defaultGroup' 이라는 그룹에 속합니다.
    group: defaultGroup

    # 파이프라인의 재료(트리거)를 정의합니다.
    materials:
      my-app-repo:
        # Git 저장소를 머티리얼로 사용합니다.
        git: https://github.com/somoon0418/my-nook.git
        username: somoon0418
        password: "{{SECRET:[my-file-secrets][somoon_config_repo_credential]}}"
        branch: master
        auto_update: true

    # 파이프라인의 단계(스테이지)들을 순서대로 정의합니다.
    stages:
      - build-and-test:
          jobs:
            compile-and-unit-test:
              tasks:
                - exec:
                    command: echo
                    arguments:
                      - ">>> 1. 코드를 성공적으로 가져왔습니다."
                - exec:
                    command: echo
                    arguments:
                      - ">>> 2. 여기서 실제 빌드 및 테스트 명령어를 실행합니다. (예:./gradlew build)"
      - deploy-to-server:
          jobs:
            run-remote-script:
              tasks:
                # ⭐️ 이제 키 파일을 생성하는 단계가 필요 없습니다.
                # 1. 마운트된 SSH 키를 사용하여 원격 서버에 바로 접속합니다.
                - exec:
                    command: ssh
                    arguments:
                      - -i # 사용할 개인 키 파일을 지정합니다.
                      - /home/go/.ssh/id_ed25519 # 컨테이너에 직접 마운트된 키 경로
                      - -o # SSH 접속 옵션을 지정합니다.
                      - StrictHostKeyChecking=no # 처음 접속하는 서버의 호스트 키를 자동으로 신뢰합니다.
                      - root@192.168.1.225
                      - ls -al
