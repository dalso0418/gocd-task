# gocd.yaml

pipelines:
  discord-alert:
    group: defaultGroup
    materials:
      my-git-repo2:
        git: https://github.com/dalso0418/gocd-task
        branch: main
    stages:
      - execute-remote-command:
          jobs:
            run-ls-on-server:
              environment_variables:
                SERVER_KEY_B64: "{{SECRET:[ssh-key][gocd_deploy_key]}}"
                DISCORD_WEBHOOK: "{{SECRET:[discord-webhook][discord-webhookurl]}}"
              tasks:
                - exec:
                    # --- 기존 SSH 접속 스크립트 ---
                    command: bash
                    arguments:
                      - -c
                      - |
                        mkdir -p ./temp
                        echo "$SERVER_KEY_B64" | base64 --decode > ./temp/id_rsa_remote
                        chmod 600 ./temp/id_rsa_remote
                        ssh -F /dev/null -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ./temp/id_rsa_remote root@192.168.1.118 'echo "--- 원격 서버 파일 목록 ---"; ls -la'
                        rm -rf ./temp

                - exec:
                    # --- 성공 알림 보내기 ---
                    run_if: passed # 이전 작업이 성공했을 때만 실행
                    command: bash
                    arguments:
                      - -c
                      - |
                        curl -H "Content-Type: application/json" -X POST -d '{"content": "✅ 파이프라인 [${GO_PIPELINE_NAME}/${GO_PIPELINE_COUNTER}] 실행 성공!"}' "$DISCORD_WEBHOOK"
              
              # --- 작업이 실패하거나 취소되었을 때 실행되는 블록 ---
              on_cancel:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - |
                        curl -H "Content-Type: application/json" -X POST -d '{"content": "❌ 파이프라인 [${GO_PIPELINE_NAME}/${GO_PIPELINE_COUNTER}] 실행 실패 또는 취소됨!"}' "$DISCORD_WEBHOOK"
